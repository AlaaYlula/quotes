/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;

import java.io.*;
import java.util.*;

public class App {

    public static void main(String[] args) {
        FileReader jsonFileReader = ReadJsonFile("recentquotes.json"); // Read the File
        quotesAndAuthor[] quotesAndAuthorsArray = ArrayOfquotesAndAuthor(jsonFileReader); // Convert from Json format to Object Array
        if(args.length == 0) {
            int RandomIndex = GetRandomNumber(quotesAndAuthorsArray.length); // Get random Number to read object from the Objects Array
            System.out.println(quotesAndAuthorsArray[RandomIndex].toString()); // Print the object
//        System.out.println("Author => "+quotesAndAuthorsArray[RandomIndex].getAuthor());
//        System.out.println("Quotes => "+quotesAndAuthorsArray[RandomIndex].getText());
        }else if (args.length == 2){
            if(args[0].equals("author")){ // Search For specific Author
                Boolean flag = false;
                for (int i = 0; i < quotesAndAuthorsArray.length; i++) {
                    if(quotesAndAuthorsArray[i].getAuthor().contains(args[1])){
                        System.out.println("///////////////");
                        System.out.println(quotesAndAuthorsArray[i].toString());
                        flag = true ;
                    }
                }
                System.out.println("///////////////");
                if(flag == false){
                    System.out.println(" Sorry :( This Author is not in the File ");
                }
            }else if (args[0].equals("contains")){ // return a quote that contains that word
                Boolean flag = false;
                for (int i = 0; i < quotesAndAuthorsArray.length; i++) {
                    if(quotesAndAuthorsArray[i].getText().contains(args[1])){
                        System.out.println("///////////////");
                        System.out.println(quotesAndAuthorsArray[i].getText());
                        flag = true ;
                    }
                }
                System.out.println("///////////////");
                if(flag == false){
                    System.out.println(" Sorry :( There is no quote that contains this word "+ args[1]);
                }
            }
        }
    }

    public static FileReader ReadJsonFile(String filename) {
        FileReader filereader = null;
        try {
            // Read From Resource Folder
            String filenameResource = Objects.requireNonNull(Thread.currentThread().getContextClassLoader()
                    .getResource(filename)).getFile();
            filereader = new FileReader(filenameResource);

        } catch (IOException exception) {
            exception.printStackTrace();
        }
        return filereader;
    }

    // Read https://buildcoding.com/parse-json-file-with-gson-library-in-java/
    public static  quotesAndAuthor[] ArrayOfquotesAndAuthor(FileReader jsonFileReader){
        Gson gson = new Gson();
        quotesAndAuthor[] quotesAndAuthorsArray = gson.fromJson(jsonFileReader, quotesAndAuthor[].class);
//        for (quotesAndAuthor result :
//                quotesAndAuthorsArray) {
//            System.out.println(result.getAuthor());
//            System.out.println(result.getText());
//            System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
//        }
        return quotesAndAuthorsArray;
    }
    // Read https://www.educative.io/edpresso/how-to-generate-random-numbers-in-java
    public static int GetRandomNumber(int arrayLength){
        //System.out.println(arrayLength);
        Random random = new Random();
        int randomNumber = random.nextInt(arrayLength);
        //System.out.println(randomNumber);
        return randomNumber;
    }

}